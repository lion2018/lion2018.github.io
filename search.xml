<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vx-app-02</title>
      <link href="/2019/10/18/vx-app-02/"/>
      <url>/2019/10/18/vx-app-02/</url>
      
        <content type="html"><![CDATA[<h1 id="cell组件slot"><a href="#cell组件slot" class="headerlink" title="cell组件slot"></a>cell组件slot</h1><blockquote><p>没太多说的,用了好几天了<br>slot就是你可以自定义cell的内容，像icon、title之类的<br>有个小tips必须要注意，value是不能自定义的<br>value必须要放在他该放的位置  </p></blockquote><hr><h1 id="picker"><a href="#picker" class="headerlink" title="picker"></a>picker</h1><blockquote><p>选择器<br>我试了一下vant的选择器组件<br>好像不能用<br>最后还是选择了微信给提供的原生的picker<br>原生还是挺好用的，样式也符合大众要求</p></blockquote><hr><h1 id="previewImg"><a href="#previewImg" class="headerlink" title="previewImg"></a>previewImg</h1><blockquote><p>微信是有原生接口支持图片预览的<br><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-18-18-24-48.png" alt="2019-10-18-18-24-48"><br>也很简单，给图片绑定个方法<br>然后几句话就搞定了</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> vx-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vx-miniapp-01</title>
      <link href="/2019/10/17/vx-miniapp-01/"/>
      <url>/2019/10/17/vx-miniapp-01/</url>
      
        <content type="html"><![CDATA[<h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><blockquote><p>禁止页面下拉刷新<br><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-17-09-58-42.png" alt="2019-10-17-09-58-42"><br>像这个页面<br>它的标题栏和上部的绿色背景其实是两部分<br>用户在下拉时，两部分会分离，显示中间的空白<br>很不美观<br>有两种解决方案</p></blockquote><ol><li>使下拉部分颜色也为绿色</li><li>禁止下拉<blockquote><p>这次我用的是第二种方法<br>如果后面有时间我再考虑下第一种怎么实现</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;enablePullDownRefresh&quot;: false,</span><br><span class="line">&quot;disableScroll&quot;:true</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>方法很简单,在禁止下拉页面的json配置文件中加上上面两局话就ok了</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> vx-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-element-admin按需引入element</title>
      <link href="/2019/10/15/vue-element-admin/"/>
      <url>/2019/10/15/vue-element-admin/</url>
      
        <content type="html"><![CDATA[<h1 id="element-UI-按需引入"><a href="#element-UI-按需引入" class="headerlink" title="element-UI 按需引入"></a>element-UI 按需引入</h1><blockquote><p>过程大体就是element官网上的那几个步骤</p></blockquote><ol><li>先把全局引入的element-ui给去掉<br><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-15-18-14-34.png" alt="2019-10-15-18-14-34"></li><li>安装syntax-dynamic-import插件</li><li>在babel配置文件中使用安装的插件<br><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-15-18-16-14.png" alt="2019-10-15-18-16-14"></li><li>在main.js中把用到的组件引入<br><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-15-18-17-16.png" alt="2019-10-15-18-17-16"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> vue-admin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>layui02</title>
      <link href="/2019/10/11/layui02/"/>
      <url>/2019/10/11/layui02/</url>
      
        <content type="html"><![CDATA[<h1 id="今天遇到的两个坑"><a href="#今天遇到的两个坑" class="headerlink" title="今天遇到的两个坑"></a>今天遇到的两个坑</h1><h2 id="layui弹出层"><a href="#layui弹出层" class="headerlink" title="layui弹出层"></a>layui弹出层</h2><p><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-11-19-07-30.png" alt="2019-10-11-19-07-30"></p><blockquote><p>如果弹出层绑定的是dom元素，遮罩层会覆盖掉弹出层，在文档中有写到，要把弹出元素放到body外面，因为遮罩层是给整个body加的<br>这时候我们就用这两句话，改变一下遮罩层绑定的位置就可以了</p></blockquote><h2 id="数据表格渲染"><a href="#数据表格渲染" class="headerlink" title="数据表格渲染"></a>数据表格渲染</h2><p><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-11-19-13-02.png" alt="2019-10-11-19-13-02"></p><blockquote><p>这个地方以前曾经在文档里看到过<br>fixed必须放在cols最后一个<br>这次终于实际踩了一下坑</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> layui踩坑日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>世界那么大让我怦然心动的却只有你</title>
      <link href="/2019/10/10/for-u/"/>
      <url>/2019/10/10/for-u/</url>
      
        <content type="html"><![CDATA[<p><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-10-18-36-28.png" alt="2019-10-10-18-36-28"></p><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><blockquote><p>我大概永远也不会忘记初识你的样子<br>那时我的vx头像是宗介<br>你见到我说的最多的一句话就是<br>波妞喜欢宗介<br>我想你大概还不知道<br>大约过了一两个月之后我才发现<br>你的头像原来不是波妞</p></blockquote><hr><blockquote><p>你的天真可爱触动了 我的心<br>犹豫了一番之后<br>我点开你的头像,想跟你开启一段故事<br>竟然被拒绝。。。<br>你的回复是害怕把我坑跑<br>唉<br>无奈之下，我只能再加一次，成功了，嘻嘻。</p></blockquote><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><blockquote><p>2019.10.12<br>原来吃醋是这种感觉么<br>会因为你跟一个人我不熟悉的人相谈甚欢而让我打心眼里讨厌他<br>好久没有过这种酸酸的感觉了<br>我还记得那次我跟过儿玩<br>开玩笑似的说去偷情<br>你好生气的<br>那次以后<br>我就不愿意去跟别的女生打游戏了  </p></blockquote><hr><blockquote><p>我知道<br>如果是因为我<br>让你失去了很多朋友<br>增加了很多烦恼<br>会让你很不快乐<br>我特别讨厌那样的爱情  </p></blockquote><hr><blockquote><p>两个人<br>不应该是互相信任<br>情比金坚的么<br>如果是因为我的反应<br>让你讨厌、烦恼<br>请你原谅<br>对不起<br>我会控制好自己的</p></blockquote><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><blockquote><p>2019.10.16<br>你说<br>自从有了我之后<br>每天变得很开心<br>和你一样,我也是  </p></blockquote><hr><blockquote><p>可能心里不空<br>装着些甜甜的东西<br>整个人都会变开心吧  </p></blockquote><hr><blockquote><p>好久没做小程序了<br>今天接了几个页面来做<br>一开始布局、适配的问题搞得我真的要烦死了<br>不过还好啦,页面也不算复杂<br>中午吃过饭睡了一觉后思路清晰了好多<br>今天蛮开心的!!</p></blockquote><hr><h2 id="情话说的再多也不如一心一意"><a href="#情话说的再多也不如一心一意" class="headerlink" title="情话说的再多也不如一心一意"></a>情话说的再多也不如一心一意</h2><p> for u</p>]]></content>
      
      
      
        <tags>
            
            <tag> for u </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>layer.photos</title>
      <link href="/2019/10/10/layer-photos/"/>
      <url>/2019/10/10/layer-photos/</url>
      
        <content type="html"><![CDATA[<h1 id="layer-photos的两种使用方式"><a href="#layer-photos的两种使用方式" class="headerlink" title="layer.photos的两种使用方式"></a>layer.photos的两种使用方式</h1><ol><li>直接绑定页面元素中的图片列表，data需绑定外层div<br><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-10-18-09-10.png" alt="2019-10-10-18-09-10"></li></ol><hr><ol start="2"><li><p>我用到的主要是第二种方式，第二种方式layer.photos需要接收一个json数据<br><img src="http://pz5lmftsp.bkt.clouddn.com/2019-10-10-18-12-47.png" alt="2019-10-10-18-12-47"><br>但是后端传过来的是一组字符串，说实话，第一次把字符串处理成json数据格式我很想逃避，用了各种方法去使用上面讲到的第一种方式，但效果总是不理想。不得已，还是得干。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">let img = data.courseImgs.split(&apos;,&apos;);</span><br><span class="line">var imgList = [];</span><br><span class="line"></span><br><span class="line">for(let index = 0; index&lt;img.length; index++)&#123;</span><br><span class="line">    var json = &#123;&#125;;</span><br><span class="line">    json.src = img[index];</span><br><span class="line">    imgList.push(json);</span><br><span class="line">&#125;</span><br><span class="line">imgList = JSON.parse(JSON.stringify(&#123;&quot;data&quot;: imgList&#125;))</span><br><span class="line">layer.photos(&#123;</span><br><span class="line">    photos: imgList,</span><br><span class="line">    anim: 0 </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><p>其中layer.photos接收的json字符串是不能带有像数组一样前面的index值的，否则渲染的时候只能展示第一张图片，而且下面显示序号为1/undefined</p>]]></content>
      
      
      
        <tags>
            
            <tag> layui踩坑日记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
